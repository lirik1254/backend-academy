version: '3.8'

services:
  db:
    image: postgres:17
    container_name: postgresLinkTracker
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: linkTrackerDB
    ports:
      - "5252:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  liquibase-migrations:
    container_name: migrations
    image: liquibase/liquibase:4.29
    depends_on:
      - db
    command:
      - --searchPath=/migrations
      - --changelog-file=changelog-master.xml
      - --driver=org.postgresql.Driver
      - --url=jdbc:postgresql://db:5432/linkTrackerDB
      - --username=${DB_USERNAME}
      - --password=${DB_PASSWORD}
      - update
    volumes:
      - ./migrations:/migrations

  zoo1-ab:
    image: confluentinc/cp-zookeeper:7.8.0
    hostname: zoo1
    container_name: zoo1-ab
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zoo1:2888:3888;zoo2:2888:3888;zoo3:2888:3888

  zoo2-ab:
    image: confluentinc/cp-zookeeper:7.8.0
    hostname: zoo2
    container_name: zoo2-ab
    ports:
      - "2182:2182"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2182
      ZOOKEEPER_SERVER_ID: 2
      ZOOKEEPER_SERVERS: zoo1:2888:3888;zoo2:2888:3888;zoo3:2888:3888

  zoo3-ab:
    image: confluentinc/cp-zookeeper:7.8.0
    hostname: zoo3
    container_name: zoo3-ab
    ports:
      - "2183:2183"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2183
      ZOOKEEPER_SERVER_ID: 3
      ZOOKEEPER_SERVERS: zoo1:2888:3888;zoo2:2888:3888;zoo3:2888:3888

  kafka-ab:
    image: confluentinc/cp-kafka:7.8.0
    hostname: kafka1
    container_name: kafka1-ab
    restart: always
    ports:
      - "9092:9092"
      - "29092:29092"
      - "9999:9999"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181,zoo2:2182,zoo3:2183"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_JMX_PORT: 9999
      KAFKA_JMX_HOSTNAME: ${DOCKER_HOST_IP:-127.0.0.1}
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    depends_on:
      - zoo1-ab
      - zoo2-ab
      - zoo3-ab

  kafka-ui-ab:
    container_name: kafka-ui-ab
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8082:8080
    environment:
      DYNAMIC_CONFIG_ENABLED: true

  redis-ab:
    image: redis:latest
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - /path/to/local/d–∞ta:/root/redis
      - /path/to/local/redis.conf:/usr/local/etc/redis/redis.conf
    environment:
      - REDIS_PASSWORD=my-password
      - REDIS_PORT=6379
      - REDIS_DATABASES=16

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro

  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: "secret"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - grafana-data:/var/lib/grafana

  bot:
    build:
      context: ./bot
      dockerfile: Dockerfile
    depends_on:
      - db
      - redis-ab
      - kafka-ab
    ports:
      - "8080:8080"
      - "9400:9400"
    environment:
      TELEGRAM_TOKEN: ${TELEGRAM_TOKEN}

  scrapper:
    build:
      context: ./scrapper
      dockerfile: Dockerfile
    depends_on:
      - db
      - redis-ab
      - kafka-ab
    ports:
      - "8081:8081"
      - "9401:9401"
    environment:
      GITHUB_TOKEN: ${GITHUB_TOKEN}
      SO_TOKEN_KEY: ${SO_TOKEN_KEY}
      SO_ACCESS_TOKEN: ${SO_ACCESS_TOKEN}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      HYPERBOLIC_API_KEY: ${HYPERBOLIC_API_KEY}

volumes:
  postgres_data:
  grafana-data:
